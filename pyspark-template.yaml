apiVersion: v1
kind: Template
metadata:
  name: pyspark-template
objects:
- kind: Service
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: pyspark
    name: pyspark
  spec:
    ports:
      - name: "8888"
        port: 8888
        targetPort: 8888
    selector:
      io.kompose.service: pyspark
  status:
    loadBalancer: {}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: pyspark-claim0
    name: pyspark-claim0
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: pyspark
    name: pyspark
  spec:
    replicas: 1
    selector:
      io.kompose.service: pyspark
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: pyspark
      spec:
        containers:
          - image: ' '
            name: pyspark
            ports:
              - containerPort: 8888
            resources: {}
            volumeMounts:
              - mountPath: /home/jovyan
                name: pyspark-claim0
        restartPolicy: Always
        volumes:
          - name: pyspark-claim0
            persistentVolumeClaim:
              claimName: pyspark-claim0
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - pyspark
          from:
            kind: ImageStreamTag
            name: pyspark:latest
        type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- kind: ImageStream
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: pyspark
    name: pyspark
  spec:
    lookupPolicy:
      local: false
    tags:
      - annotations: null
        from:
          kind: DockerImage
          name: jupyter/all-spark-notebook
        generation: null
        importPolicy: {}
        name: latest
        referencePolicy:
          type: ""
  status:
    dockerImageRepository: ""
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: pyspark-route
    namespace: spark-test
  spec:
    host: pyspark-route-spark-test.2.rahtiapp.fi
    to:
      kind: Service
      name: pyspark
      weight: 100
    port:
      targetPort: '8888'


